(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{192:function(n,t){n.exports={attributes:{title:"Redesign và những gì tôi học",slug:"redesign-va-nhung-gi-tui-hoc",date:"2016-12-25",tags:["personal","css","postcss","hugo","javascript"]},html:'<p>Thực ra bài viết này đã có từ lâu, nhưng tôi vẫn để nó ở chế độ bản nháp và cũng do lười (quá lười) nên cũng từ lâu tôi cũng bỏ thói quen viết blog. Nay tôi chia sẻ những kinh nghiệm khi thiết kế lại blog này.</p>\n<h3>Thiết kế</h3>\n<p>Vì không phải là một Designer nên tôi không giỏi về thiết kế lắm. Nên tôi vẫn giữ kiểu thiết kế tối giản (minimalism) cho trang blog này.</p>\n<p>Blog mới cung cấp hai giao diện, giúp bạn không bị mỏi mắt khi đọc lâu. Bạn nhấn vào biểu tượng ở góc phải để đổi sang giao diện yêu thích nhé. Có thể tôi sẽ cập nhật thêm về màu sắc xíu nữa cho phù hợp.</p>\n<p><img src="/images/blog/blog_v2.png" alt="Dang Thanh Blog - phiên bản light and dark"></p>\n<p>tôi cũng đã xoá đi hệ thống phản hồi (trước đây tôi dùng <a href="https://disqus.com/">Disqus</a>) vì thấy nó không hữu ích. Các bạn có thể liên hệ hoặc trao đổi với tôi qua <a href="mailto:dangvanthanh@dangthanh.org">email</a>.</p>\n<h3>Hugo</h3>\n<p>So với <a href="/blog/blog-va-toi/">Jekyll</a>, <a href="https://gohugo.io/">Hugo</a> hỗ trợ xây dựng blog nhanh và tích hợp live reload dễ dàng cho việc phát triển blog hơn.</p>\n<p>Hugo cung cấp thêm nhiều chức năng mới như:</p>\n<ul>\n<li>Chuyển đổi <code>SCSS</code> hay <code>Sass</code> sang CSS</li>\n<li>Hỗ trợ tốt <code>PostCSS</code></li>\n<li>Tối ưu các tập tin <code>CSS</code>, <code>JavaScript</code>, <code>JSON</code>, <code>HTML</code>, <code>SVG</code>, <code>XML</code></li>\n<li>Cải tiến hiển thị hightlight cho code với <a href="https://github.com/alecthomas/chroma">Chroma</a></li>\n</ul>\n<p>Bên cạnh đó, việc chuyển đổi sang Hugo giúp tôi tuỳ biến phân trang dễ dàng. Giúp bạn dễ dàng chọn được trang cũng như tìm kiếm bài viết theo từng chủ đề trong chuyên mục <a href="/tags">lưu trữ</a> cùng với hệ thống phân <a href="/tags/css/">bài viết theo thứ tự alphabet</a>.</p>\n<h3>CSS</h3>\n<p>Vì lí do tối giản cả thiết kế lẫn CSS. Nên với phiên bản này tôi không sử dụng <a href="http://tachyons.io/">Tachyons</a> nữa. Mặc dù Tachyons rất hữu ích, giúp việc xây dựng giao diện tuỳ biến cao, cũng như xây dựng những giao diện phức tạp một cách dễ dàng. Với một vài thay đổi dưới đây, blog đã được cải tiến tốc độ cũng khá nhiều.</p>\n<h4>CSS Grid</h4>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout">CSS Grid</a> giúp tôi tuỳ biến web mình dễ dàng hơn so với <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox">Flexbox</a> trong cách phân chia bố cục của trang blog này cũng như tuỳ biến Responsive cho màn hình desktop và mobile.</p>\n<pre class="hljs"><code><span class="hljs-keyword">@custom-media</span> --tablet (width &gt;= <span class="hljs-number">800px</span>);\n\n<span class="hljs-selector-class">.site</span> {\n  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">60rem</span>;\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;\n\n  @media (--tablet) {\n    <span class="hljs-attribute">display</span>: grid;\n    <span class="hljs-attribute">grid-template-columns</span>: <span class="hljs-number">1</span>fr <span class="hljs-number">3</span>fr;\n  }\n}\n</code></pre>\n<p><strong>Chú ý:</strong> <em>Đây là cú pháp tôi viết sử dụng PostCSS được trình bày ở dưới.</em></p>\n<h4>Times Newer Roman, Roboto Slab và Ubuntu Mono</h4>\n<p>Việc thay đổi font chữ <a href="https://fonts.google.com/specimen/Muli">Muli</a> sang sử dụng phông chữ <a href="https://timesnewerroman.com/">Times Newer Roman</a> là một bộ phông chữ tương tự Times New Roman nhưng độ dài mỗi ký tự rộng hơn (theo như tác giả là 5 - 10%) giúp bạn dễ dàng đọc nội dung trên blog hơn.</p>\n<p>Nhưng sau khi xem blog trên Windows tôi thấy phông chữ Times Newer Roman không hiển thị đẹp lắm mặc dù trên Mac hay Linux phông chữ vẫn hiển thị rất đẹp nên cuối cùng cũng chọn phông chữ <a href="https://fonts.google.com/specimen/Roboto+Slab">Roboto Slab</a>.</p>\n<p>Còn với code highlight tôi sử dụng <a href="https://fonts.google.com/specimen/Ubuntu+Mono">Ubuntu Mono</a>. Mặc dù vẫn thích những phông chữ hỗ trợ <code>ligatures</code> như <a href="https://github.com/tonsky/FiraCode">Fira Code</a> nhưng Ubuntu Mono vẫn dễ nhìn hơn với các bạn chưa quen với <code>ligatures</code>.</p>\n<h4>CSS Font Loading API: Preload</h4>\n\x3c!-- caniuse features="link-rel-preload"  --\x3e\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"preload"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/fonts/TimesNewerRoman-Regular.otf"</span> <span class="hljs-attr">as</span>=<span class="hljs-string">"font"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"font/otf"</span> <span class="hljs-attr">crossorigin</span>&gt;</span>\n</code></pre>\n<p>Preload trên giúp phông chữ của bạn được nạp vào trang web nhanh. Đồng thời việc khai báo trên giúp việc quản lý phông chữ nhúng vào dễ dàng so với việc sử dụng <code>@font-face</code></p>\n<h4>CSS Font Loading API: Font Display</h4>\n\x3c!-- caniuse features="css-font-rendering-controls"  --\x3e\n<pre class="hljs"><code><span class="hljs-keyword">@font-face</span> {\n  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">"Times Newer Roman"</span>;\n  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;\n  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(/fonts/TimesNewerRoman-Bold.otf) <span class="hljs-built_in">format</span>(<span class="hljs-string">"opentype"</span>);\n  <span class="hljs-attribute">font-display</span>: swap;\n}\n</code></pre>\n<p>Khi bạn nhúng một phông chữ bằng <code>@font-face</code> hoặc từ <a href="https://fonts.google.com/">Google Fonts</a> lúc đầu phông chữ hiển thị làm bạn có cảm giác giật giật (nhấp nhánh). Với\n<code>font-display: swap</code> làm cho khoảng thời gian tải phông chữ và quá trình hiển thị phông chữ mượt hơn. Hạn chế của thuộc tính này là chỉ hỗ trợ những trình duyệt mới.</p>\n<h3>PostCSS</h3>\n<p>Trước đây tôi vẫn dùng <a href="/blog/su-dung-sass/">Sass</a> trong một thời gian dài. Bênh cạnh những lợi ích của Sass như dễ dàng bảo trì, tối ưu, tiếm kiệt thời gian viết code CSS so với cách viết truyền thống thì <a href="https://postcss.org/">PostCSS</a> cung cấp thêm nhiều chức năng và linh hoạt hơn so với Sass như <a href="https://github.com/postcss/autoprefixer">Autoprefixer</a>, <a href="https://github.com/css-modules/css-modules">CSS Modules</a>, <a href="https://github.com/browserslist/browserslist">Browserslist</a>... Sắp tới tôi cũng sẽ giới thiệu về PostCSS để các bạn có thể hiểu rõ hơn.</p>\n<p>Ví dụ ta muốn xây dựng một web với hai giao diện. Với CSS truyền thống:</p>\n<pre class="hljs"><code><span class="hljs-selector-tag">body</span> {\n  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fffafa</span>;\n  <span class="hljs-attribute">color</span>: <span class="hljs-number">#242424</span>;\n}\n\n<span class="hljs-selector-tag">body</span><span class="hljs-selector-class">.night</span> {\n  <span class="hljs-attribute">background</span>: <span class="hljs-number">#222233</span>;\n  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n}\n</code></pre>\n<p>Nhưng với PostCSS bạn có thể viết.</p>\n<pre class="hljs"><code><span class="hljs-selector-pseudo">:root</span> {\n  <span class="hljs-attribute">--background</span>: <span class="hljs-number">#fffafa</span>;\n  <span class="hljs-attribute">--color</span>: <span class="hljs-number">#242424</span>;\n}\n\n<span class="hljs-selector-class">.night</span> {\n  <span class="hljs-attribute">--background</span>: <span class="hljs-number">#222233</span>;\n  <span class="hljs-attribute">--color</span>: <span class="hljs-number">#fff</span>;\n}\n\n<span class="hljs-selector-tag">body</span> {\n  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--background);\n  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--color);\n}\n</code></pre>\n<p>Với cách viết này bạn sẽ dễ dàng cập nhật thêm các biến giá trị tuỳ biến.</p>\n<h3>Webp Images</h3>\n\x3c!-- caniuse features="webp"  --\x3e\n<p>Ban đầu tôi tính chuyển tất cả hình ảnh của web hiện tại sang <code>webp</code>. Nhưng cả trình duyệt Safari và Firefox đều không hỗ trợ tốt định dạng này. Nên cuối cùng vẫn phải dùng <code>png</code> và <code>jpg</code> để nó có thể hỗ trợ hầu hết trình duyệt.</p>\n<h3>Service Worker and Offine Web</h3>\n<p>Offine web giúp blog này có thể chạy ngay cả khi bạn không kết Internet (bạn có thể tắt Internet và trải nghiệm). Ở đây mình hộ trợ offine web với <strong><a href="https://developers.google.com/web/fundamentals/primers/service-workers/">service worker</a></strong> và dùng <strong><a href="https://developers.google.com/web/tools/workbox/">Workbox</a></strong> một module được viết bằng Node.js để tạo ra tài nguyên offine cho Hugo.</p>\n'}}}]);