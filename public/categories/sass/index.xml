<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sass on Blog về HTML/HTML5, CSS/CSS3, JavaScript</title>
    <link>http://dangthanh.org/categories/sass/</link>
    <description>Recent content in Sass on Blog về HTML/HTML5, CSS/CSS3, JavaScript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vn-vi</language>
    <lastBuildDate>Tue, 03 Sep 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://dangthanh.org/categories/sass/index.xml" rel="self" type="application/rss+xml" />

    <item>
      <title>Đổ Bóng Mixin Với Text-Shadow</title>
      <link>http://dangthanh.org/2013/09/03/do-bong-mixin-voi-text-shadow/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>

      <guid>http://dangthanh.org/2013/09/03/do-bong-mixin-voi-text-shadow/</guid>
      <description>

&lt;p&gt;CSS3 Text-Shadow là tính năng giúp bạn dễ dàng tạo đổ bóng cho text. Với text-shadow bạn cũng có thể dễ dàng tạo ra các kiểu chữ nghệ thuật (typography) hay kiểu chữ 3D&amp;hellip;Và hôm nay mình sẽ giới thiệu các bạn &lt;strong&gt;&lt;a href=&#34;http://dangthanh.org/2013/08/20/css-triangles-mixin-su-dung-sass/&#34;&gt;cách tạo mixin&lt;/a&gt;&lt;/strong&gt; đổ bóng dài (long shadow) trong Sass.&lt;/p&gt;

&lt;h3 id=&#34;đổ-bóng-dài-long-shadow-mixin-trong-sass&#34;&gt;Đổ bóng dài (Long Shadow) mixin trong Sass&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;/**
 * Long Shadow Mixin
 */
@mixin longshadow($color, $size, $direction)
	$ts: null

	@for $i from 1 through $size
		// Đổ bóng hướng lên trên
		@if $direction == &amp;quot;top&amp;quot;
			$ts: 0 #{$i * -1}px 0 $color, $ts
		// Đổ bóng hướng sang phải
		@else if $direction == &amp;quot;right&amp;quot;
			$ts: #{$i}px 0 0 $color, $ts
		// Đổ bóng hướng xuống dưới
		@else if $direction == &amp;quot;bottom&amp;quot;
			$ts: 0 #{$i}px 0 $color, $ts
		// Đổ bóng hướng sang trái
		@else if $direction == &amp;quot;left&amp;quot;
			$ts: #{$i * -1}px 0 0 $color, $ts
		// Đổ bóng hướng lên trên bên trái
		@else if $direction == &amp;quot;top-left&amp;quot;
			$ts: #{$i * -1}px #{$i * -1}px 0 $color, $ts
		// Đổ bóng hướng lên trên bên phải
		@else if $direction == &amp;quot;top-right&amp;quot;
			$ts: #{$i}px #{$i * -1}px 0 $color, $ts
		// Đổ bóng hướng xuống dưới bên trái
		@else if $direction == &amp;quot;bottom-left&amp;quot;
			$ts: #{$i * -1}px #{$i}px 0 $color, $ts
		// Đổ bóng hướng xuống dưới bên phải
		@else if $direction == &amp;quot;bottom-right&amp;quot;
			$ts: #{$i}px #{$i}px 0 $color, $ts
	text-shadow: $ts
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sử-dụng&#34;&gt;Sử dụng&lt;/h3&gt;

&lt;p&gt;Sau khi tạo được mixin thì ta có thể sử dụng rất dễ dàng tùy theo màu sắc, độ lớn và vị trí bóng mà bạn muốn hiển thị.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;.element--one
	+longshadow(#e96b5e, 20, top)
.element--two
	+longshadow(#a13c32, 10, right)
.element--three
	+longshadow(#fbbc85, 30, bottom)
.element--four
	+longshadow(#af7a4b, 40, left)
.element--five
	+longshadow(#6dd7b5, 70, top-left)
.element--six
	+longshadow(#3e9277, 90, top-right)
.element--seven
	+longshadow(#8787c4, 60, bottom-left)
.element--eight
	+longshadow(#525283, 50, bottom-right)
&lt;/code&gt;&lt;/pre&gt;







&lt;p
	data-height=&#34;266&#34;
	data-theme-id=&#34;652&#34;
	data-slug-hash=&#34;wLKan&#34;
	data-user=&#34;dangvanthanh&#34;
	data-default-tab=&#34;result&#34;
	class=&#39;codepen&#39;&gt;
	See the
	&lt;a href=&#39;http://codepen.io/dangvanthanh/pen/wLKan&#39;&gt;Pen&lt;/a&gt;
	by Dang Van Thanh (&lt;a href=&#39;http://codepen.io/dangvanthanh&#39;&gt;@dangvanthanh&lt;/a&gt;) on
	&lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;
&lt;/p&gt;
&lt;script defer src=&#34;//codepen.io/assets/embed/ei.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Trên đây mình &lt;strong&gt;&lt;a href=&#34;http://dangthanh.org/2013/07/24/su-dung-sass/&#34;&gt;sử dụng Sass&lt;/a&gt;&lt;/strong&gt; để tạo đổ bóng dài, bạn cũng có thể tùy biến thêm như thêm chức năng bóng mờ cho bóng&amp;hellip;Nếu bạn không muốn làm việc với Sass nhưng vẫn muốn dùng tạo text đổ bóng dài bạn có thể sử dụng &lt;strong&gt;&lt;a href=&#34;http://dangthanh.org/labs/longshadow-jquery-plugin/&#34;&gt;Long Shadow jQuery Plugin&lt;/a&gt;&lt;/strong&gt; mình đang viết và phát triển. Mình cũng rất mong nhận được góp ý của các bạn để hoàn thiện hơn mixin cũng như jQuery plugin này.&lt;/p&gt;
</description>
    </item>

    <item>
      <title>CSS Triangles Mixin trong Sass</title>
      <link>http://dangthanh.org/2013/08/20/css-triangles-mixin-trong-sass/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>

      <guid>http://dangthanh.org/2013/08/20/css-triangles-mixin-trong-sass/</guid>
      <description>

&lt;p&gt;Trong thiết kế web các hình khối như hình tam giác, hình tròn, hình chữ nhật&amp;hellip;thường được sử dụng khá thường xuyên. Khi muốn tạo các chú thích (tooltips), trước đây bạn thường sử dụng hình ảnh bằng việc sử dụng các công cụ như Photoshop, Fireworsk&amp;hellip;điều này có thể làm cho bạn phải vất vả thay đổi khi muốn thiết kế lại vị trí của chúng, nhưng với CSS Triangles bạn cũng có thể tạo cho mình những chú thích linh động hơn.&lt;/p&gt;

&lt;p&gt;Bài viết trước mình cũng đã giới thiệu &lt;strong&gt;&lt;a href=&#34;http://dangthanh.org/2013/07/24/su-dung-sass&#34;&gt;sử dụng Sass&lt;/a&gt;&lt;/strong&gt; đến với các bạn. Hôm nay mình sẽ hướng dẫn các bạn viết CSS Triangles sử dụng Sass.&lt;/p&gt;

&lt;p&gt;Để bạn có thể dễ dàng làm quen với mixin này. Đầu tiên mình sẽ hướng dẫn các bạn sử dụng điều khiển kiểm soát &lt;strong&gt;@if&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;@if&lt;/strong&gt; là một điều khiển của SassScript và được sử dụng dưới dạng lồng ghép nếu biểu thức trả về giá trị nào đó hoặc false hoặc null&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;$type: blue

p
	@if $type == red
		color: red
	@else if $type == green
		color: green
	@else if $type == blue
		color: blue
	@else
		color: white
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Khi chuyển đổi thành CSS ta được&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;p {
	color: blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Và sử dụng điều hướng &lt;strong&gt;if&lt;/strong&gt; ta có thể viết CSS Triangles sử dụng Sass&lt;/p&gt;

&lt;h3 id=&#34;css-triangles-mixin-trong-sass&#34;&gt;CSS Triangles Mixin trong Sass&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;/**
 * Dấu = bạn có thể thay thế bằng @mixin
 * nếu bạn sử dụng cú pháp SCSS
 */
=arrow($direction, $color, $size)
  $transparent: $size solid transparent
  $sizeborder: $size solid $color // Khai báo này sẽ giúp bạn tránh lặp lại code
  display: block
  height: 0
  width: 0

  // Mũi tên theo hướng lên trên
  @if $direction == &amp;quot;top&amp;quot;
    border:
      left: $transparent
      right: $transparent
      bottom: $sizeborder
  // Mũi tên theo hướng bên phải
  @else if $direction == &amp;quot;right&amp;quot;
    border:
      top: $transparent
      bottom: $transparent
      left: $sizeborder
  // Mũi tên theo hướng bên dưới
  @else if $direction == &amp;quot;bottom&amp;quot;
    border:
      top: $sizeborder
      right: $transparent
      left: $transparent
  // Mũi tên theo hướng bên trái
  @else if $direction == &amp;quot;left&amp;quot;
    border:
      top: $transparent
      right: $sizeborder
      bottom: $transparent
  // Mũi tên theo hướng trên bên phải
  @else if $direction == &amp;quot;top-right&amp;quot;
    border:
      top: $sizeborder
      right: $transparent
  // Mũi tên theo hướng trên bên trái
  @else if $direction == &amp;quot;top-left&amp;quot;
    border:
      top: $sizeborder
      left: $transparent
  // Mũi tên theo hướng dưới bên phải
  @else if $direction == &amp;quot;bottom-right&amp;quot;
    border:
      bottom: $sizeborder
      right: $transparent
  // Mũi tên theo hướng dưới bên trái
  @else if $direction == &amp;quot;bottom-left&amp;quot;
    border:
      bottom: $sizeborder
      left: $transparent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sử-dụng-css-triangles-mixin&#34;&gt;Sử dụng CSS Triangles Mixin&lt;/h3&gt;

&lt;p&gt;Việc sử dụng CSS Triangles mixin cực kì đơn giản.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;/**
 * Dấu + bạn có thể thay thế bằng @include
 * nếu bạn sử dụng cú pháp SCSS
 */
.arrow-top
  +arrow(top, rgba(255, 10, 10, .5), 50px)

.arrow-right
  +arrow(right, rgba(255, 10, 10, .5), 50px)
&lt;/code&gt;&lt;/pre&gt;







&lt;p
	data-height=&#34;266&#34;
	data-theme-id=&#34;652&#34;
	data-slug-hash=&#34;qKmfh&#34;
	data-user=&#34;dangvanthanh&#34;
	data-default-tab=&#34;result&#34;
	class=&#39;codepen&#39;&gt;
	See the
	&lt;a href=&#39;http://codepen.io/dangvanthanh/pen/qKmfh&#39;&gt;Pen&lt;/a&gt;
	by Dang Van Thanh (&lt;a href=&#39;http://codepen.io/dangvanthanh&#39;&gt;@dangvanthanh&lt;/a&gt;) on
	&lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;
&lt;/p&gt;
&lt;script defer src=&#34;//codepen.io/assets/embed/ei.js&#34;&gt;&lt;/script&gt;


&lt;h4 id=&#34;sử-dụng-với-css3-pseudo-before-hoặc-after-để-tạo-tooltips&#34;&gt;Sử dụng với CSS3 Pseudo :before hoặc :after để tạo tooltips&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;.tooltip
  background-color: #e74c3c
  display: inline-block
  width: 500px
  padding: 20px
  position: relative
  &amp;amp;:before
    content: &amp;quot;&amp;quot;
    position: absolute
    top: 30px
    left: -20px
    +arrow(left, #e74c3c, 20px) // Bạn có thể chọn vị trí khác cho phù hợp
&lt;/code&gt;&lt;/pre&gt;







&lt;p
	data-height=&#34;266&#34;
	data-theme-id=&#34;652&#34;
	data-slug-hash=&#34;jxchk&#34;
	data-user=&#34;dangvanthanh&#34;
	data-default-tab=&#34;result&#34;
	class=&#39;codepen&#39;&gt;
	See the
	&lt;a href=&#39;http://codepen.io/dangvanthanh/pen/jxchk&#39;&gt;Pen&lt;/a&gt;
	by Dang Van Thanh (&lt;a href=&#39;http://codepen.io/dangvanthanh&#39;&gt;@dangvanthanh&lt;/a&gt;) on
	&lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;
&lt;/p&gt;
&lt;script defer src=&#34;//codepen.io/assets/embed/ei.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Với mixin này, mình hi vọng các bạn có thể cải tiến thêm các tooltips của website mình và khám phá thêm nhiều kĩ thuật mới qua việc sử dụng các điều khiển các Sass.&lt;/p&gt;
</description>
    </item>

    <item>
      <title>Sử dụng Sass</title>
      <link>http://dangthanh.org/2013/07/24/su-dung-sass/</link>
      <pubDate>Wed, 24 Jul 2013 00:00:00 +0000</pubDate>

      <guid>http://dangthanh.org/2013/07/24/su-dung-sass/</guid>
      <description>

&lt;p&gt;Bạn đã từng nghe về những CSS Preprocessors như &lt;a href=&#34;http://lesscss.org/&#34;&gt;Less&lt;/a&gt;, &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt; hay &lt;a href=&#34;http://learnboost.github.io/stylus/&#34;&gt;Stylus&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;css-preprocessor-là-gì&#34;&gt;CSS Preprocessor là gì?&lt;/h3&gt;

&lt;p&gt;CSS Preprocessor là một ngôn ngữ kịch bản mở rộng của CSS và được biên dịch thành cú pháp CSS.&lt;/p&gt;

&lt;p&gt;Sau đây là một vài lợi ích của việc sử dụng CSS Preprocessor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tiết kiệm thời gian viết CSS.&lt;/li&gt;
&lt;li&gt;Dễ dàng bảo trì và phát triển CSS.&lt;/li&gt;
&lt;li&gt;Linh hoạt và có thể sử dụng lại các CSS.&lt;/li&gt;
&lt;li&gt;Các tập tin CSS được tổ chức rõ ràng.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sass-là-gì&#34;&gt;Sass là gì?&lt;/h3&gt;

&lt;p&gt;Sass là một mở rộng CSS cung cấp thêm các quy tắc xếp chồng (nested rules), biến (variables), mixins, thừa kế (selector inheritance), các hàm (function)&amp;hellip;&lt;/p&gt;

&lt;p&gt;Để cài đặt Sass đầu tiên bạn cần cài đặt Ruby. Mình đang xài Windows nên mình sẽ hướng dẫn các bạn cài đặt Ruby trên Windows thông qua &lt;a href=&#34;http://rubyinstaller.org/&#34;&gt;RubyInstaller&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sau khi cài đặt xong Ruby bạn cài đặt môi trường cho Ruby &lt;strong&gt;(Computer -&amp;gt; Properties -&amp;gt; Advanced -&amp;gt; Enviroment Variables&amp;hellip; )&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dangthanh.org/assets/images/rubyinstaller.jpg&#34; alt=&#34;Cài đặt môi trường cho Ruby trên Windows&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tiếp theo bạn cài đặt Sass bằng cách mở CMD và gõ:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install sass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sass cung cấp hai định dạng tập tin mở rộng .scss và .sass. Để chuyển đổi tập tin sass sang .css bạn thực hiện lệnh sau:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sass stylesheet.scss stylesheet.css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Để thực hiện chuyển đổi trong quá trình làm việc bạn thực hiện lệnh sau:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sass --watch stylesheet.scss:stylesheet.css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bạn làm việc với thư mục và cần chuyển đổi tất cả thì có thể thực hiện lệnh sau:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sass --watch sass:css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ở trên mình sử dụng command-line để thực hiện chuyển đổi sass sang css. Nếu bạn không thân thiện với command-line bạn có thể sử dụng các GUI sau:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://mhs.github.io/scout-app/&#34;&gt;Scout&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://alphapixels.com/prepros/&#34;&gt;Prepros&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://koala-app.com/&#34;&gt;Koala&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tại-sao-lại-sử-dụng-sass&#34;&gt;Tại sao lại sử dụng Sass?&lt;/h3&gt;

&lt;p&gt;Sass, Less hay Stylus đều mạnh mẽ, việc sử dụng CSS Preprocessor nào còn phụ thuộc vào môi trường làm việc của bạn. Vì thế hãy tìm hiểu và chọn cho mình một CSS Preprocessor phù hợp nhất với mình.&lt;/p&gt;

&lt;h3 id=&#34;tổng-quan-về-sass&#34;&gt;Tổng quan về Sass&lt;/h3&gt;

&lt;h4 id=&#34;cú-pháp&#34;&gt;Cú pháp&lt;/h4&gt;

&lt;p&gt;Như đã đề cập ở trên Sass hỗ trợ hai định dạng SCSS (.scss) và Sass (.sass). Cú pháp SCSS không khác với cú pháp của CSS nên rất phù hợp với bạn nào muốn làm quen với Sass. Còn Sass thì cú pháp nghiêm ngặt hơn một tý, về cách thụt lùi khoảng trắng và không sử dụng &amp;ldquo;{}&amp;rdquo; và &amp;ldquo;;&amp;rdquo; (Mình thích sử dụng cú pháp Sass vì nó gọn gàng hơn)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;body {
	font:
		family: Helvetica, Arial, sans-serif;
		size: 16px;
		style: normal;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sass&#34;&gt;body
	font:
		family: Helvetica, Arial, sans-serif
		size: 16px
		style: normal
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sau khi biên dịch ta sẽ có:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;body {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-style: normal;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Để các bạn dễ làm quen với Sass. Nên các ví dụ dưới đây mình sẽ dùng cú pháp SCSS.&lt;/p&gt;

&lt;h4 id=&#34;quy-tắc-xếp-chồng-nested-rules&#34;&gt;Quy tắc xếp chồng (Nested Rules)&lt;/h4&gt;

&lt;p&gt;Các quy tắc xếp chồng sẽ giúp bạn đồng bộ những thành phần cùng với nhau.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;nav {
	ul {
		list-style: none;
	}
	li {
		display: inline-block;
	}
	a {
		display: block;
		padding: 10px;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;nav ul {
	list-style: none;
}
nav li {
	display: inline-block;
}
nav a {
	display: block;
	padding: 10px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Quy tắc xếp chồng các thuộc tính&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Trong Sass với những thuộc tính như margin, padding, border&amp;hellip;chúng ta có thể xếp chồng để tránh những khai báo không cần thiết.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;.heading {
	text:
		align: center;
		decoration: none;
		transform: uppercase;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.heading {
	text-align: center;
	text-decoration: none;
	text-transform: uppercase;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Quy tắc xếp chồng media queries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sass cung cấp quy tắc xếp chồng giúp bạn làm việc tốt hơn với media queries.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;header {
	width: 960px;
	@media screen and (max-width: 960px) {
		width: 100%;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;header {
	width: 960px;
}
@media screen and (max-width: 960px) {
	header {
		width: 100%;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kí hiệu &amp;ldquo;&amp;amp;&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sass cung cấp một cách viết để thêm cho vùng chọn trước phổ biến như pseudo class như :hover, :active&amp;hellip;Ngoài ra &amp;ldquo;&amp;amp;&amp;rdquo; còn lồng ghép lớp cha cho thuộc tính được khai báo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;a {
	color: #f9f9f9;
	text-decoration: none;
	&amp;amp;:hover {
		color: #000;
	}
	header &amp;amp; {
		font-size: 30px;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;a {
	color: #f9f9f9;
	text-decoration: none;
}
a:hover {
	color: #000;
}
header a {
	font-size: 30px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;biến&#34;&gt;Biến&lt;/h4&gt;

&lt;p&gt;Biến là một trong những tính năng hữu ích mà Sass cung cấp. Với Sass bạn có thể khai báo biến và sử dụng lại chúng khi cần thiết.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;$base-font: 16px;
$base-color: #444;
$heveltica: Helvetica, Arial, sans-serif;

body {
	color: $base-color;
	font: $base-font $heveltica;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;body {
	color: #444444;
	font: 16px Helvetica, Arial, sans-serif;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;mixins&#34;&gt;Mixins&lt;/h4&gt;

&lt;p&gt;Mixins cung cấp một cách hòa trộn dễ dàng giữa các thuộc tính và giá trị và chia sẻ giữa các bộ chọn khác nhau.&lt;/p&gt;

&lt;p&gt;Mixins được định nghĩa bởi &lt;strong&gt;@mixin&lt;/strong&gt; (SCSS) và &lt;strong&gt;=&lt;/strong&gt; (Sass). Và bạn có thể gọi mixin bằng cách sử dụng &lt;strong&gt;@include&lt;/strong&gt; (SCSS) hoặc &lt;strong&gt;+&lt;/strong&gt; (Sass)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;@mixin button($color, $color-hover) {
	color: $color;
	&amp;amp;:hover {
		color: $color-hover;
	}
}

.button {
	@include button(#fafafa, #aaa);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.button {
	color: #fafafa;
}
.button:hover {
	color: #aaa;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Tham số mặc định&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ta sử dụng lại ví dụ trên với giá trị tham số mặc định. Và bạn có thể ghi đè lại nếu muốn.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;@mixin button($color: #fafafa, $color-hover: #aaa) {
	color: $color;
	&amp;amp;:hover {
		color: $color-hover;
	}
}
.button {
	@include button(#ddd);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.button {
	color: #ddd;
}
.button:hover {
	color: #aaa;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Nhiều biến tham số&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Khi một hoặc nhiều giá trị trong tham số bạn có thể khai báo với với &lt;strong&gt;&amp;hellip;&lt;/strong&gt; trong mixin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;@mixin transition($trans...) {
	-webkit-transition: $trans;
	-moz-transition: $trans;
	transition: $trans;
}
.transition {
	@include transition(all .5s linear);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.transition {
	-webkit-transition: all .5s linear;
	-moz-transition: all .5s linear;
	transition: all .5s linear;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;@import&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Trong Sass &lt;strong&gt;@import&lt;/strong&gt; giúp bạn tổ chức cấu trúc các tập tin CSS được tốt hơn. Ta có thể xây dựng một cấu trúc cho website mình như sau:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;web
|--css
|--sass
	 |--_normalize.scss
	 |--_typography.scss
	 |--_grid.scss
	 |--_form.scss
	 |--stylesheet.scss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Trong tập tin &lt;strong&gt;stylesheet.scss&lt;/strong&gt; ta có thể khai báo như sau và sau đó biên dịch nó thành tập tin &lt;strong&gt;stylesheet.css&lt;/strong&gt; duy nhất.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;@import &amp;quot;normalize&amp;quot;;
@import &amp;quot;typography&amp;quot;;
@import &amp;quot;grid&amp;quot;, &amp;quot;form&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;kế-thừa&#34;&gt;Kế thừa&lt;/h4&gt;

&lt;p&gt;Đây là tính năng giúp bạn sử dụng lại nhiều thuộc tính khai báo trong CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sử dụng @extend&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;.alert {
	background-color: #fcfcfc;
	border-radius: 4px;
	padding: 15px;
}

.alert-success {
	@extend .alert;
	color: #464646;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.alert {
	background-color: #fcfcfc;
	border-radius: 4px;
	padding: 15px;
}
.alert-success {
	background-color: #fcfcfc;
	border-radius: 4px;
	padding: 15px;
	color: #464646;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Placeholder kế thừa&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Đây là tính năng kế thừa nhằm tránh những khai báo thuộc tính không cần thiết. Bạn có thể khai báo placeholder kế thừa bằng &lt;strong&gt;%&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;%alert {
	background-color: #fcfcfc;
	border-radius: 4px;
	padding: 15px;
}
.alert-success {
	@extend %alert;
	color: #464646;
}
.alert-error {
	@extend %alert;
	color: #b94a48;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.alert-success,
.alert-error {
	background-color: #fcfcfc;
	border-radius: 4px;
	padding: 15px;
}
.alert-success {
	color: #464646;
}
.alert-error {
	color: #b94a48;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kế thừa phần tử&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kế thừa trong Sass cũng hỗ trợ làm việc với các phần tử.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;.box {
	padding: 20px;
	h3 {
		font-size: 20px;
	}
}
.sub-box {
	@extend .box;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biên dịch thành CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.box, .sub-box {
	padding: 20px;

}
.box h3, .sub-box h3 {
	font-size: 20px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;các-điều-khiển-trong-sass&#34;&gt;Các điều khiển trong Sass&lt;/h4&gt;

&lt;p&gt;Sass cung cấp cho bạn điều khiển logic sau:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@if&lt;/li&gt;
&lt;li&gt;@for&lt;/li&gt;
&lt;li&gt;@each&lt;/li&gt;
&lt;li&gt;while&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Muốn làm việc với các điều khiển trong Sass thì bạn nên có chút kiến thức lập trình cơ bản nên mình sẽ dành riêng một bài viết hướng dẫn chi tiết hơn.&lt;/p&gt;

&lt;h3 id=&#34;lời-kết&#34;&gt;Lời kết&lt;/h3&gt;

&lt;p&gt;Trên đây chỉ là tổng quan về Sass. Sass mang lại cho ta rất nhiều hữu ích tuy nhiên Sass không giúp ta có thể viết CSS tốt hơn. Vì thế bạn hãy nên tìm hiểu cách viết CSS tốt hơn như OOCSS (hướng đối tựng trong CSS), SMACSS, BEM&amp;hellip;Và Sass sẽ là một công cụ tốt để bạn thực hiện việc đó.&lt;/p&gt;
</description>
    </item>

  </channel>
</rss>