!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([,function(e,t,n){"use strict";function r(e){const t=e.dataset.src;var n;(n=t,new Promise((e,t)=>{const r=new Image;r.src=n,r.onload=e,r.onerror=t})).then(()=>{e.src=t,e.classList.add("loaded")})}n.r(t),"serviceWorker"in navigator&&"https:"===window.location.protocol&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){switch(t.state){case"installed":navigator.serviceWorker.controller?console.log("New or updated content is available."):console.log("Content is now available offline!");break;case"redundant":console.error("The installing service worker became redundant.")}}}}).catch(function(e){console.error("Error during service worker registration:",e)})}),document.addEventListener("DOMContentLoaded",function(){var e,t;e=document.querySelectorAll("a"),t=!1,[].forEach.call(e,e=>{var n=e.getAttribute("href"),r=e.getAttribute("data-link"),o=window.location.pathname,a=window.location.host;n&&n.indexOf("http")>-1&&-1===n.indexOf(a)&&(e.setAttribute("target","_blank"),e.setAttribute("rel","noopener")),o.indexOf(r)>-1&&(e.classList.add("is-active"),t=!0)}),t||document.querySelector('a[data-link="home"]').classList.add("is-active"),function(){var e=document.getElementById("site-canvas");if(null!=e){var t=650,n=e.getContext("2d"),r=function(e,t){if(e<10?n.strokeRect(0,0,e,e):n.fillRect(0,0,e,e),!(e<2)){var o=e*Math.cos(t*Math.PI/180);n.save(),n.translate(e,0),n.rotate(t*Math.PI/180),n.translate(-o,-o),r(o,15+60*Math.random()),n.restore();var a=e*Math.sin(t*Math.PI/180);n.save(),n.rotate((t-90)*Math.PI/180),n.translate(0,-a),r(a,15+60*Math.random()),n.restore()}},o=function(){window.innerWidth<800&&(t=window.innerWidth-32);var o=e.width=t,a=e.height=400;n.clearRect(0,0,o,a),n.fillStyle="#111",n.globalCompositeOperation="xor";var i=Math.min(o,a)/7;n.save(),n.translate(.5*o-.5*i,a-i),r(i,15+60*Math.random()),n.restore()};window.addEventListener("resize",o,!1),["resize","click","touchdown"].forEach(e=>{document.addEventListener(e,o,!1)}),o()}}(),function(){let e=[...document.querySelectorAll(".lazy-image")];if("IntersectionObserver"in window){let t=new IntersectionObserver(function(e){e.forEach(e=>{if(e.isIntersecting&&e.intersectionRatio>0){const n=e.target;t.unobserve(n),r(n)}})},{rootMargin:"100px 0px",threshold:.01});e.forEach(e=>t.observe(e))}else e.forEach(e=>r(e))}()})}]);